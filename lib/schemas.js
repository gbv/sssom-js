// Minimal JSON Schema of <https://mapping-commons.github.io/sssom/Mapping/>
export const mappingSchema = {
  type: "object",
  $defs: {
    EntityReference: {
      type: "string", // TODO
    },
    EntityTypeEnum: {
      enum: [
        "owl class",
        "owl object property",
        "owl data property",
        "owl annotation property",
        "owl named individual",
        "skos concept",
        "rdfs resource",
        "rdfs class",
        "rdfs literal",
        "rdfs datatype",
        "rdf property",
        "composed entity expression",
      ],
    },
    Uri: {
      type: "string", // TODO
    },
    Date: {
      type: "string", // TODO
    },
    Percentage: {
      type: "number",
      maximum: 1.0,
      minimum: 0.0,
    },  
  },
  properties: {
    subject_id: { $ref: "#/$def/EntityReference" },
    subject_label: { type: "string" },
    subject_category: { type: "string" },
    predicate_id: { $ref: "#/$def/EntityReference" },
    predicate_label: { type: "string" },
    predicate_modifier: { enum: [ "Not" ] },
    object_id: { $ref: "#/$def/EntityReference" },
    object_label: { type: "string" },
    object_category: { type: "string" },
    mapping_justification: {
      enum: [
        "semapv:LexicalMatching",
        "semapv:LogicalReasoning",
        "semapv:CompositeMatching",
        "semapv:UnspecifiedMatching",
        "semapv:SemanticSimilarityThresholdMatching",
        "semapv:LexicalSimilarityThresholdMatching",
        "semapv:MappingChaining",
        "semapv:MappingReview",
        "semapv:ManualMappingCuration",
      ],
    },
    author_id: { type: "array", items: { $ref: "#/$def/EntityReference" } },
    author_label: { type: "array", items: { type: "string" } },
    reviewer_id: { type: "array", items: { $ref: "#/$def/EntityReference" } },
    reviewer_label: { type: "array", items: { type: "string" } },
    creator_id: { type: "array", items: { $ref: "#/$def/EntityReference" } },
    creator_label: { type: "array", items: { type: "string" } },
    license: { $ref: "#/$defs/Uri" },
    subject_type: { $ref: "#/$defs/EntityTypeEnum" },
    subject_source: { $ref: "#/$defs/EntityReference" },
    subject_source_version: { type: "string" },
    object_type: { $ref: "#/$defs/EntityTypeEnum" },
    object_source: { $ref: "#/$defs/EntityReference" },
    object_source_version: { type: "string" },
    predicate_type: { $ref: "#/$defs/EntityTypeEnum" },
    mapping_provider: { $ref: "#/$defs/Uri" },
    mapping_source: { $ref: "#/$defs/EntityReference" },
    mapping_cardinality: { enum: [ "1:1", "1:n", "n:1", "1:0", "0:1", "n:n" ] },
    mapping_tool: { type: "string" },
    mapping_tool_version: { type: "string" },
    mapping_date: { $ref: "#/$defs/Date" },
    publication_date: { $ref: "#/$defs/Date" },
    confidence: { $ref: "#/$defs/Percentage" },
    curation_rule: { type: "array", items: { $ref: "#/$def/EntityReference" } },
    curation_rule_text: { type: "array", items: { type: "string" } },
    subject_match_field: { type: "array", items: { $ref: "#/$def/EntityReference" } },
    match_string: { type: "array", items: { type: "string" } },
    subject_preprocessing: { type: "array", items: { $ref: "#/$def/EntityReference"  } },
    object_preprocessing: { type: "array", items: { $ref: "#/$def/EntityReference"  } },
    similarity_score: { $ref: "#/$defs/Percentage" },
    similarity_measure: { type: "string" },
    see_also: { type: "array", items: { $ref: "#/$defs/Uri" } },
    issue_tracker_item: { $ref: "#/$def/EntityReference" },
    other: { type: "string" }, 
    comment: { type: "string" },
  },      
  required: ["predicate_id", "mapping_justification"],
}

